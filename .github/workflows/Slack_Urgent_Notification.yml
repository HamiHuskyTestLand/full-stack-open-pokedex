name: Urgent PR Slack Notification

on:
  pull_request:
    types: [labeled, review_requested]

jobs:
  notify_urgent:
    runs-on: ubuntu-latest
    steps:
      - name: Check urgent and notify
        uses: actions/github-script@v7
        with:
          script: |
            const action = `${{ github.event.action }}`;
            const hasUrgent = ${{ contains(github.event.pull_request.labels.*.name, 'urgent') }};
            const allReviewers = `${{ join(github.event.pull_request.requested_reviewers.*.login, ',') }}`;
            const newReviewer = `${{ github.event.requested_reviewer.login }}`;
            const prAge = (Date.now() - new Date(`${{ github.event.pull_request.created_at }}`)) / 1000;
            const isPrFresh = prAge < 60;
            
            let isUrgent = false;
            let targetUsers = '';
            let sendChannel = false;
            let sendDM = false;
            
            if (action === 'labeled' && `${{ github.event.label.name }}`.toLowerCase() === 'urgent') {
              isUrgent = true;
              targetUsers = isPrFresh ? '' : allReviewers;
              sendChannel = isPrFresh ? !allReviewers : true;
              sendDM = !isPrFresh && allReviewers;
            } else if (action === 'review_requested' && hasUrgent && newReviewer) {
              isUrgent = true;
              targetUsers = newReviewer;
              sendChannel = sendDM = true;
            }
            
            core.setOutput('urgent', isUrgent);
            core.setOutput('users', targetUsers);
            core.setOutput('channel', sendChannel);
            core.setOutput('dm', sendDM);

  call_notification:
    needs: notify_urgent
    if: fromJSON(needs.notify_urgent.outputs.urgent)
    uses: ./.github/workflows/reusable-slack-notification.yml
    with:
      message_template: "ðŸš¨ Urgent PR: <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}> needs review ASAP!"
      target_users: ${{ needs.notify_urgent.outputs.users }}
      send_channel: ${{ fromJSON(needs.notify_urgent.outputs.channel) }}
      send_dm: ${{ fromJSON(needs.notify_urgent.outputs.dm) }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
