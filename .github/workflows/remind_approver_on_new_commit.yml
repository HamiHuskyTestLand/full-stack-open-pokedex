name: Notify Stale Reviewer

on:
  pull_request:
    types: [synchronize]

permissions:
  pull-requests: write

jobs:
  notify-stale-reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: Find current approvers
        id: find-approvers
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            
            // Get PR details to check requested reviewers
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            
            // Get all submitted reviews
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            
            console.log(`=== DEBUG INFO ===`);
            console.log(`Requested reviewers: ${pr.requested_reviewers.map(r => r.login).join(', ')}`);
            console.log(`Total reviews found: ${reviews.length}`);
            
            // Get latest review per user
            const latestReviewsByUser = reviews
              .sort((a, b) => new Date(a.submitted_at) - new Date(b.submitted_at))
              .reduce((acc, review) => {
                acc[review.user.login] = review;
                return acc;
              }, {});
            
            // Show latest review states
            console.log(`=== Latest review states ===`);
            Object.entries(latestReviewsByUser).forEach(([user, review]) => {
              console.log(`${user}: ${review.state} (${review.submitted_at})`);
            });
            
            // Get list of users who are currently requested to review
            const requestedReviewerLogins = pr.requested_reviewers.map(r => r.login);
            console.log(`=== Users with pending review requests ===`);
            console.log(requestedReviewerLogins.join(', ') || 'None');
            
            // Find current approvers (exclude those with pending review requests)
            const currentApprovers = Object.values(latestReviewsByUser)
              .filter(review => {
                const isApproved = review.state === 'APPROVED';
                const isNotBot = !review.user.login.endsWith('[bot]');
                const hasNoPendingRequest = !requestedReviewerLogins.includes(review.user.login);
                
                console.log(`${review.user.login}: approved=${isApproved}, notBot=${isNotBot}, noPendingRequest=${hasNoPendingRequest}`);
                
                return isApproved && isNotBot && hasNoPendingRequest;
              })
              .sort((a, b) => new Date(b.submitted_at) - new Date(a.submitted_at));
            
            if (currentApprovers.length === 0) {
              console.log('=== RESULT: No valid approvers found ===');
              return { hasApprovals: false };
            }
            
            console.log(`=== RESULT: Will notify ${currentApprovers[0].user.login} ===`);
            
            return {
              hasApprovals: true,
              prNumber,
              mostRecentApprover: currentApprovers[0].user.login
            };

      - name: Comment on PR to notify stale reviewer
        if: fromJson(steps.find-approvers.outputs.result).hasApprovals
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ fromJson(steps.find-approvers.outputs.result).prNumber }}
          body: |
            @${{ fromJson(steps.find-approvers.outputs.result).mostRecentApprover }} A new commit has been pushed to this PR. Please review again if the merging panel appears your review is stale.
