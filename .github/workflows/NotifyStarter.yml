name: Notify Approver of Unresolved Threads

on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-unresolved-conversations:
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    steps:
      - name: Check for unresolved threads by reviewer
        id: check-threads
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const reviewer = context.payload.review.user.login;

            let allThreads = [];
            let hasNextPage = true;
            let endCursor = null;

            while (hasNextPage) {
                const { repository } = await github.graphql(`
                    query($owner: String!, $repo: String!, $number: Int!, $after: String) {
                        repository(owner: $owner, name: $repo) {
                            pullRequest(number: $number) {
                                reviewThreads(first: 100, after: $after) {
                                    nodes {
                                        isResolved
                                        comments(first: 1) {
                                            nodes {
                                                author { login }
                                                body
                                                url
                                            }
                                        }
                                    }
                                    pageInfo {
                                        hasNextPage
                                        endCursor
                                    }
                                }
                            }
                        }
                    }
                `, { owner, repo, number: context.payload.pull_request.number, after: endCursor });

                const threads = repository.pullRequest.reviewThreads.nodes;
                allThreads = allThreads.concat(threads);
                hasNextPage = repository.pullRequest.reviewThreads.pageInfo.hasNextPage;
                endCursor = repository.pullRequest.reviewThreads.pageInfo.endCursor;
            }

            const unresolvedThreads = allThreads
                .filter(thread =>
                    !thread.isResolved
                    && thread.comments.nodes.length > 0
                    && thread.comments.nodes[0]?.author?.login === reviewer
                );

            if (unresolvedThreads.length === 0) return;

            const PREVIEW_LENGTH = 70;

            const threadList = unresolvedThreads
                .map((thread, index) => {
                    const preview = thread.comments.nodes[0].body.substring(0, PREVIEW_LENGTH);
                    return `${index + 1}. [View thread](${thread.comments.nodes[0].url}) - ${preview}${preview.length >= PREVIEW_LENGTH
                        ? '...'
                        : ''}`;
                })
                .join('\n');

            core.setOutput('reviewer', reviewer);
            core.setOutput('unresolvedCount', unresolvedThreads.length);
            core.setOutput('threadList', threadList);

      - name: Comment on PR to notify reviewer
        if: steps.check-threads.outputs.reviewer
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            @${{ steps.check-threads.outputs.reviewer }} You have approved this PR, but you also started ${{ steps.check-threads.outputs.unresolvedCount }} unresolved review thread(s). Please resolve your own conversations. Thank you!

            **Your unresolved review threads:**
            ${{ steps.check-threads.outputs.threadList }}
