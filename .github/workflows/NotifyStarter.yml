name: Comment on Unresolved Review Threads (Ultra Simple)

on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-unresolved-conversations:
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    steps:
      - name: Debug - Print event data
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Review State: ${{ github.event.review.state }}"
          echo "Reviewer: ${{ github.event.review.user.login }}"
          echo "PR Number: ${{ github.event.pull_request.number }}"

      - name: Simple test with basic GraphQL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const reviewer = context.payload.review.user.login;
            
            console.log('Starting simple test...');
            
            // Just test the basic GraphQL that we know works
            const simpleQuery = `
              query($owner: String!, $repo: String!, $number: Int!) {
                repository(owner: $owner, name: $repo) {
                  pullRequest(number: $number) {
                    number
                    title
                    reviewThreads(first: 5) {
                      totalCount
                    }
                  }
                }
              }
            `;
            
            const result = await github.graphql(simpleQuery, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              number: prNumber
            });
            
            console.log('GraphQL result:', JSON.stringify(result, null, 2));
            
            // Simple comment
            const commentBody = `@${reviewer} Thank you for approving PR #${prNumber}! There are ${result.repository.pullRequest.reviewThreads.totalCount} review threads in total.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });
            
            console.log('Comment posted successfully');
