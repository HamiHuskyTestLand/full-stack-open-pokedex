name: Comment on Unresolved Review Threads (Step by Step)

on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-unresolved-conversations:
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    steps:
      - name: Debug - Print event data
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Review State: ${{ github.event.review.state }}"
          echo "Reviewer: ${{ github.event.review.user.login }}"
          echo "PR Number: ${{ github.event.pull_request.number }}"

      - name: Step 1 - Get basic review threads info
        id: step1
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const reviewer = context.payload.review.user.login;
            
            console.log('Step 1: Getting basic review threads info...');
            
            const query = `
              query($owner: String!, $repo: String!, $number: Int!) {
                repository(owner: $owner, name: $repo) {
                  pullRequest(number: $number) {
                    reviewThreads(first: 10) {
                      totalCount
                      nodes {
                        isResolved
                      }
                    }
                  }
                }
              }
            `;
            
            const result = await github.graphql(query, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              number: prNumber
            });
            
            const threads = result.repository.pullRequest.reviewThreads.nodes;
            const unresolvedCount = threads.filter(t => !t.isResolved).length;
            
            console.log(`Total threads: ${threads.length}, Unresolved: ${unresolvedCount}`);
            
            core.setOutput('totalThreads', threads.length.toString());
            core.setOutput('unresolvedThreads', unresolvedCount.toString());

      - name: Step 2 - Get thread details if there are unresolved threads
        id: step2
        if: steps.step1.outputs.unresolvedThreads != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const reviewer = context.payload.review.user.login;
            
            console.log('Step 2: Getting thread details...');
            
            const query = `
              query($owner: String!, $repo: String!, $number: Int!) {
                repository(owner: $owner, name: $repo) {
                  pullRequest(number: $number) {
                    reviewThreads(first: 10) {
                      nodes {
                        isResolved
                        comments(first: 1) {
                          nodes {
                            author {
                              login
                            }
                            body
                            url
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;
            
            const result = await github.graphql(query, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              number: prNumber
            });
            
            const threads = result.repository.pullRequest.reviewThreads.nodes;
            let myUnresolvedCount = 0;
            
            for (const thread of threads) {
              if (!thread.isResolved && thread.comments.nodes.length > 0) {
                const firstComment = thread.comments.nodes[0];
                if (firstComment.author && firstComment.author.login === reviewer) {
                  myUnresolvedCount++;
                  console.log(`Found unresolved thread by ${reviewer}: ${firstComment.body.substring(0, 50)}...`);
                }
              }
            }
            
            console.log(`${reviewer} has ${myUnresolvedCount} unresolved threads`);
            
            core.setOutput('myUnresolvedCount', myUnresolvedCount.toString());

      - name: Step 3 - Post comment if needed
        if: steps.step2.outputs.myUnresolvedCount != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const reviewer = context.payload.review.user.login;
            const count = '${{ steps.step2.outputs.myUnresolvedCount }}';
            
            console.log(`Posting comment for ${count} unresolved threads...`);
            
            const commentBody = `@${reviewer} You have approved this PR, but you also started ${count} unresolved review thread(s). Please resolve your own conversations before merging. Thank you! üôè`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: commentBody
            });
            
            console.log('Comment posted successfully');
