name: Comment on Unresolved Review Threads (Notify Thread Starter)

on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-unresolved-conversations:
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    steps:
      # Step 1: Debug - Print event data
      - name: Debug - Print event data
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Review State: ${{ github.event.review.state }}"
          echo "Reviewer: ${{ github.event.review.user.login }}"
          echo "PR Number: ${{ github.event.pull_request.number }}"

      # Step 2: Test basic github-script functionality
      - name: Test basic GitHub script
        id: test-script
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Basic script test successful');
            console.log('PR Number:', context.payload.pull_request.number);
            console.log('Reviewer:', context.payload.review.user.login);
            
            // Set a simple output
            core.setOutput('test', 'success');

      # Step 3: Test GraphQL query (simplified)
      - name: Test GraphQL query
        id: test-graphql
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const prNumber = context.payload.pull_request.number;
              
              // Simple GraphQL test first
              const simpleQuery = `
                query($owner: String!, $repo: String!, $number: Int!) {
                  repository(owner: $owner, name: $repo) {
                    pullRequest(number: $number) {
                      number
                      title
                    }
                  }
                }
              `;
              
              const result = await github.graphql(simpleQuery, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                number: prNumber
              });
              
              console.log('GraphQL query successful:', result);
              core.setOutput('graphql-test', 'success');
              
            } catch (error) {
              console.error('GraphQL Error:', error);
              core.setFailed(`GraphQL failed: ${error.message}`);
            }

     
