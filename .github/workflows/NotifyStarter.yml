name: Comment on Unresolved Review Threads (Working Version)

on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-unresolved-conversations:
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    steps:
      - name: Debug - Print event data
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Review State: ${{ github.event.review.state }}"
          echo "Reviewer: ${{ github.event.review.user.login }}"
          echo "PR Number: ${{ github.event.pull_request.number }}"

      - name: Find unresolved threads started by this reviewer
        id: check-unresolved-threads
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const reviewer = context.payload.review.user.login;
            
            console.log(`Checking PR #${prNumber} for reviewer ${reviewer}`);

            // Step 1: Get reviewThreads with comments
            const query = `
              query($owner: String!, $repo: String!, $number: Int!) {
                repository(owner: $owner, name: $repo) {
                  pullRequest(number: $number) {
                    reviewThreads(first: 100) {
                      nodes {
                        isResolved
                        comments(first: 1) {
                          nodes {
                            url
                            body
                            author {
                              login
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;

            try {
              const result = await github.graphql(query, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                number: prNumber
              });

              console.log('GraphQL query successful');
              
              const reviewThreads = result.repository.pullRequest.reviewThreads.nodes;
              console.log(`Total review threads: ${reviewThreads.length}`);
              
              // Filter unresolved threads
              const unresolvedThreads = reviewThreads.filter(thread => !thread.isResolved);
              console.log(`Unresolved threads: ${unresolvedThreads.length}`);

              // Filter threads started by this reviewer
              const myUnresolvedThreads = unresolvedThreads.filter(thread => {
                const firstComment = thread.comments.nodes[0];
                if (!firstComment || !firstComment.author) {
                  return false;
                }
                return firstComment.author.login === reviewer;
              });

              console.log(`Unresolved threads started by ${reviewer}: ${myUnresolvedThreads.length}`);

              if (myUnresolvedThreads.length > 0) {
                console.log('Creating comment...');
                
                // Build thread list
                const threadItems = [];
                for (let i = 0; i < Math.min(myUnresolvedThreads.length, 8); i++) {
                  const thread = myUnresolvedThreads[i];
                  const comment = thread.comments.nodes[0];
                  const preview = comment.body ? comment.body.substring(0, 70) : '';
                  const url = comment.url || '#';
                  const item = `${i + 1}. [View thread](${url}) - ${preview}${preview.length >= 70 ? '...' : ''}`;
                  threadItems.push(item);
                }
                
                const threadList = threadItems.join('\n');
                const extraThreadsText = myUnresolvedThreads.length > 8 ? 
                  `\n\n*... and ${myUnresolvedThreads.length - 8} more thread(s)*` : '';

                const commentBody = `@${reviewer} You have approved this PR, but you also started ${myUnresolvedThreads.length} unresolved review thread(s). Please resolve your own conversations before merging.

**Your unresolved review threads:**
${threadList}${extraThreadsText}

Please resolve your conversations before merging this PR. Thank you! üôè`;

                core.setOutput('prNumber', prNumber.toString());
                core.setOutput('commentBody', commentBody);
                core.setOutput('shouldComment', 'true');
                
                console.log('Comment prepared successfully');
              } else {
                console.log('No unresolved threads by this reviewer');
                core.setOutput('shouldComment', 'false');
              }
              
            } catch (error) {
              console.error('Error:', error.message);
              console.error('Stack:', error.stack);
              core.setOutput('shouldComment', 'false');
            }

      - name: Comment on PR to notify reviewer
        if: steps.check-unresolved-threads.outputs.shouldComment == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ steps.check-unresolved-threads.outputs.prNumber }}
          body: ${{ steps.check-unresolved-threads.outputs.commentBody }}
